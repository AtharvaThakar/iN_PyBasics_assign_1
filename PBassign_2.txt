Q1
Boolean data type in python 
True
False

Q2 
Boolean operators 
1) and - if both are true then output is true otherwise false.
2) or  - if both are false the output is false otherwise true.
3) not - it reverses the logical value.

Q3
T means True
F means False
AND operator truth table 
operand1 operand2 output
T		T		T
T		F		F
F		T		F
F		F 		F

OR operator truth table 
T		T		T
T		F		T
F		T		T
F		F		F


NOT operator truth table 
operand 	ouptut
T 		F
F		T

Q4
1) False
2) False
3) True
4) False
5) False
6) True

Q5 
== is to check whether the two values are equal, if equal output is True else False.
!= is not equal to sign, checks whether two values are unequal.
>= is greater than equal to operator, sees if the right value is greater or equal to the left value.
> is to check whether the value on the left side is greater than the right side or not.
< is to check whether the value on the left side is less than the right side or not.
<= is the less than or equal to operator, checks if the left value is less than or equal to the right value.

Q6
The assignment operator has single equals to sign, it is used to give variables some value.
The equal to operator has double equals to sign, it is for comparing values are same or not.

Q7
spam = 0
if spam == 10:
	print('eggs')
if spam > 5:
	print('bacon')
else:
	print('ham')
	print('spam')
	print('spam')
First block is first if statement (spam==10), second if statment, third is the else statement.

Q8
spam = input()
if spam == 1:
	print('Hello')
if spam==2 :
	print('Howdy')
else:
	print('Greetings!')

Q9 
In jupyter notebook we will Interrupt the kernel for endless loop.
In other ide we will press CTRL+C.

Q10
Break statement terminates the ongoing loop process and exits the loop.
Continue statement skips the current execution process and moves to the next statement

Q11
There will be no difference in the output of the three mentioned range function varieties.

Q12 
for a in range(1,11):
	print(a)
-------------------------
a=1
while(a<11):
	print(a)
	a+=1	

Q13
To call bacon function from spam module we will execute spam.bacon().